/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.proyectospand.Interfaces.Empleados;

import com.toedter.calendar.JCalendar;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import com.proyectospand.ConexionDB.conexionDB;
import com.proyectospand.Entidades.TipoEmpleado;


/**
 *
 * @author omarr
 */
public class RegistrarEmpleadosForm2 extends javax.swing.JPanel {
    
    public RegistrarEmpleadosForm2() {
        initComponents();
        cargarTiposEmpleados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFechaContratoEmp = new javax.swing.JLabel();
        txtFechaContratoEmp = new javax.swing.JTextField();
        lblTipoEmpleado = new javax.swing.JLabel();
        txtPassClaveEmp = new javax.swing.JPasswordField();
        lblClaveEmp1 = new javax.swing.JLabel();
        jcbTipoEmpleado = new javax.swing.JComboBox<>();
        bttnSeleccionar = new javax.swing.JButton();

        setBackground(new java.awt.Color(230, 230, 250));

        lblFechaContratoEmp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFechaContratoEmp.setForeground(new java.awt.Color(102, 102, 102));
        lblFechaContratoEmp.setText("Fecha de contrato*");

        txtFechaContratoEmp.setForeground(new java.awt.Color(153, 153, 153));
        txtFechaContratoEmp.setText("Ingresa la fecha del empleado");
        txtFechaContratoEmp.setEnabled(false);
        txtFechaContratoEmp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFechaContratoEmpFocusGained(evt);
            }
        });
        txtFechaContratoEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtFechaContratoEmpMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtFechaContratoEmpMousePressed(evt);
            }
        });

        lblTipoEmpleado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTipoEmpleado.setForeground(new java.awt.Color(102, 102, 102));
        lblTipoEmpleado.setText("Tipo de empleado:");

        txtPassClaveEmp.setText("***************");
        txtPassClaveEmp.setEnabled(false);
        txtPassClaveEmp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPassClaveEmpFocusGained(evt);
            }
        });
        txtPassClaveEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtPassClaveEmpMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPassClaveEmpMousePressed(evt);
            }
        });

        lblClaveEmp1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblClaveEmp1.setForeground(new java.awt.Color(102, 102, 102));
        lblClaveEmp1.setText("Clave de ingreso*");

        jcbTipoEmpleado.setEnabled(false);

        bttnSeleccionar.setText("SELECCIONAR");
        bttnSeleccionar.setEnabled(false);
        bttnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnSeleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPassClaveEmp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(lblFechaContratoEmp)
                    .addComponent(txtFechaContratoEmp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(lblTipoEmpleado)
                    .addComponent(lblClaveEmp1)
                    .addComponent(jcbTipoEmpleado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttnSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFechaContratoEmp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bttnSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFechaContratoEmp, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblClaveEmp1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassClaveEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTipoEmpleado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbTipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(236, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFechaContratoEmpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaContratoEmpFocusGained
        if (txtFechaContratoEmp.getText().equals("Ingresa la fecha del empleado")){
            txtFechaContratoEmp.setText("");
            txtFechaContratoEmp.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtFechaContratoEmpFocusGained

    private void txtFechaContratoEmpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaContratoEmpMousePressed
        if (txtFechaContratoEmp.getText().equals("Ingresa la fecha del empleado")){
            txtFechaContratoEmp.setText("");
            txtFechaContratoEmp.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtFechaContratoEmpMousePressed

    private void txtFechaContratoEmpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaContratoEmpMouseExited
        if (txtFechaContratoEmp.getText().isEmpty()){
            txtFechaContratoEmp.setText("Ingresa la fecha del empleado");
            txtFechaContratoEmp.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_txtFechaContratoEmpMouseExited

    private void txtPassClaveEmpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassClaveEmpFocusGained
        if (String.valueOf(txtPassClaveEmp.getPassword()).equals("***************")){
            txtPassClaveEmp.setText("");
            txtPassClaveEmp.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPassClaveEmpFocusGained

    private void txtPassClaveEmpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPassClaveEmpMousePressed
        if (String.valueOf(txtPassClaveEmp.getPassword()).equals("***************")){
            txtPassClaveEmp.setText("");
            txtPassClaveEmp.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPassClaveEmpMousePressed

    private void txtPassClaveEmpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPassClaveEmpMouseExited
        if (String.valueOf(txtPassClaveEmp.getPassword()).isEmpty()){
            txtPassClaveEmp.setText("***************");
            txtPassClaveEmp.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_txtPassClaveEmpMouseExited

    private void bttnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnSeleccionarActionPerformed
        // Crear un JCalendar
        JCalendar calendar = new JCalendar();
        // Mostrar un cuadro de di√°logo modal con el JCalendar
        int option = JOptionPane.showConfirmDialog(null, calendar, "Seleccionar Fecha", JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);

        // Si el usuario presiona OK, obtener la fecha seleccionada
        if (option == JOptionPane.OK_OPTION) {
            Date selectedDate = calendar.getDate();

            // Formatear la fecha y ponerla en el JTextField
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String formattedDate = dateFormat.format(selectedDate);
            txtFechaContratoEmp.setText(formattedDate);
        }
    }//GEN-LAST:event_bttnSeleccionarActionPerformed

    private void cargarTiposEmpleados() {
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    try {
        // Obtener una conexi√≥n del pool
        con = conexionDB.getIntance().getConnection();

        // Consulta SQL para obtener los nombres de los tipos de empleados
        String sql = "SELECT * FROM TipoEmpleado";
        ps = con.prepareStatement(sql);
        rs = ps.executeQuery();

        // Limpiar el JComboBox antes de llenarlo
        jcbTipoEmpleado.removeAllItems();

        // Llenar el JComboBox con los nombres de los tipos de empleados
        while (rs.next()) {
                int id = rs.getInt("idTipoEmpleado");
                String nombre = rs.getString("nombreTipo");
                double sueldo = rs.getDouble("sueldo");
                TipoEmpleado tipoEmpleado = new TipoEmpleado(id, nombre,sueldo);
                jcbTipoEmpleado.addItem(tipoEmpleado.getNombreTipo());
        }

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al cargar tipos de empleados: " + ex.getMessage());
    } finally {
        try {
            // Cerrar ResultSet, PreparedStatement y devolver la conexi√≥n al pool
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            if (con != null) conexionDB.getIntance().closeConnection(con);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}

    public String getFechaContrato(){
        return txtFechaContratoEmp.getText();
    }

    public String getClave(){
        return String.valueOf(txtPassClaveEmp.getPassword());
    }

    public String getTipo(){
        return jcbTipoEmpleado.getSelectedItem().toString();
    }
    
    public int getTipoEmpleado(){
        String tipoEmpleado = jcbTipoEmpleado.getSelectedItem().toString();
        switch(tipoEmpleado){
            case "administrador":
                return 1;
            case "recepcionista":
                return 2;
            case "inventarista":
                return 3;
            case "masajista":
                return 4;
            default:
                return 4;
        }
    }

    public void setFechaContrato(String fecha){
        txtFechaContratoEmp.setText(fecha);
    }

    public void setClave(String clave){
        txtPassClaveEmp.setText(clave);
    }

    public void setTipo(String tipo){
        jcbTipoEmpleado.setSelectedItem(tipo);
    }

    public void limpiarCampos(){
        txtFechaContratoEmp.setText("Ingresa la fecha del empleado");
        txtPassClaveEmp.setText("***************");
        jcbTipoEmpleado.setSelectedIndex(0);
    }

    public void habilitarComponentes(Boolean estado){
        txtPassClaveEmp.setEnabled(estado);
        jcbTipoEmpleado.setEnabled(estado);
        bttnSeleccionar.setEnabled(estado);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnSeleccionar;
    private javax.swing.JComboBox<String> jcbTipoEmpleado;
    private javax.swing.JLabel lblClaveEmp1;
    private javax.swing.JLabel lblFechaContratoEmp;
    private javax.swing.JLabel lblTipoEmpleado;
    private javax.swing.JTextField txtFechaContratoEmp;
    private javax.swing.JPasswordField txtPassClaveEmp;
    // End of variables declaration//GEN-END:variables
}
